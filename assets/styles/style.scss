/*
    Wheel of Concept, Matlosh 2023
    https://github.com/Matlosh
*/

// Fonts
@font-face {
    src: url('../fonts/Jost-Light.woff2');
    font-family: 'Jost';
    font-weight: 300;
    font-display: swap;
}

@font-face {
    src: url('../fonts/Jost-Regular.woff2');
    font-family: 'Jost';
    font-weight: 400;
    font-display: swap;
}

@font-face {
    src: url('../fonts/Jost-Medium.woff2');
    font-family: 'Jost';
    font-weight: 500;
    font-display: swap;
}

@font-face {
    src: url('../fonts/Jost-SemiBold.woff2');
    font-family: 'Jost';
    font-weight: 600;
    font-display: swap;
}

@font-face {
    src: url('../fonts/Jost-Bold.woff2');
    font-family: 'Jost';
    font-weight: 700;
    font-display: swap;
}

// Variables
$background-lighter: #424242;
$background: #272727;
$background-2: #1D1D1D;
$success: #0CB700;
$black: #000000;
$white: #ffffff;

// General styles
* {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    font-family: 'Jost';
}

body {
    background-color: $background;
}

h1, h2, h3, h4, h5, h6, p, span, a, em {
    color: $white;
}

// Mixins

@mixin hover_pointer() {
    &:hover {
        cursor: pointer;    
    }
}

// Animations

// @keyframes button_animation {
//     0% {

//     }
// }

// General classes
.flex-container {
    display: flex;
    flex-wrap: wrap;
}

.align-center {
    align-items: center;
}

.justify-center {
    justify-content: center;
}

.dir-row {
    flex-direction: row;
}

.dir-column {
    flex-direction: column;
}

// Site elements styles
#content {

    .wheel-container {
        width: fit-content;
        position: relative;

        #wheel {
            border: 1px solid $white;
        }

        .start-button {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            width: 5rem;
            height: 5rem;
            background-color: $white;
            border: 1px solid $black;
            border-radius: 50%;
            @include hover_pointer();

            &.active {
                pointer-events: none;
                opacity: .5;
            }
        }
    }
}

// Application's control panel
#control-panel {
    width: 20rem;
    height: 100%;
    position: fixed;
    right: 0;
    top: 0;
    background-color: $background-2;
    color: $white;
    box-shadow: -10px 5px 25px $background-2;
    padding: 1rem;
    transition: .15s all ease-in-out;

    &.expanded {
        right: 0;
    }

    &.shrunk {
        right: -22rem;
    }

    .form-group {
        position: relative;
        margin: .5rem 0;

        &:has(input[type="checkbox"]) {
            align-items: center;
        }

        label {

            &:has(+ input[type="text"]) {
                position: absolute;
                background-color: $background-2;
                color: rgba($white, .7);
                font-size: .8rem;
                font-weight: 100;
                padding: 0 .3rem;
                transform: translate(10px, -.5rem);
            } 
        }

        .input-container {
            width: 2rem;
            height: 1rem;
            position: relative;
            margin-left: .5rem;

            input {

                &[type="checkbox"] {
                    width: 0px;
                    height: 0px;
                    @include hover_pointer();
    
                    &::before, &::after {
                        transition: .15s all ease-in-out;
                    }

                    &::before {
                        content: '';
                        position: absolute;
                        width: 2rem;
                        height: 1rem;
                        display: block;
                        border: 2px solid $background-lighter;
                        border-radius: .6rem;
                        top: 0;
                    }
    
                    &::after {
                        content: '';
                        width: .6rem;
                        height: .6rem;
                        display: block;
                        background-color: $background-lighter;
                        border-radius: 50%;
                        position: absolute;
                        top: 50%;
                        left: 20%;
                        transform: translate(0, -33%);
                    }
    
                    &:checked {
                        
                        &::before {
                            background-color: rgba($success, 1);
                        }

                        &::after {
                            left: 60%;
                        }
                    }
                }
            }
        }

        input {

            &[type="text"] {
                width: 100%;
                font-family: 'Jost';
                padding: .3rem .5rem;
                background-color: $background-2;
                border: 0;
                border: 2px solid $background-lighter;
                border-radius: .2rem;
                color: $white;
            }
            
            &:focus {
                outline: none;
            }
        }

        span {
            font-size: .8rem;
            margin-top: .25rem;
        }
    }

    .button {
        width: 5rem;
        min-width: 5rem;
        font-weight: 100;
        text-align: center;
        padding: .25rem .5rem;
        border: 2px solid $background-lighter;
        border-radius: .2rem;
        transition: .15s all ease-in;
        @include hover_pointer();

        &:hover {
            background-color: $success;
        }
    }

    #shrink-expand-button {
        width: 2rem;
        height: 2rem;
        position: absolute;
        bottom: 1rem;
        transition: .15s all ease-in-out;   
        @include hover_pointer();

        &.expand {
            left: -4rem;
            transform: rotate(180deg);
            background-color: $background-2;
            border-top-right-radius: 2rem;
            border-bottom-right-radius: 2rem;
        }

        &.shrink {
            left: .5rem;
            transform: rotate(0deg);
        }

        svg {
            width: 100%;
            height: 100%;
            fill: rgba($white, .7);
        }
    }
}